type Position {
  x: Int!
  y: Int!
}

type Cell {
  position: Position!
  owner: User!
}

type Board {
  cells: [Cell]!
  possibleSteps: [Position]!
  lastStep: Cell
  winner: User
  winnerLine: [Position]
  currentPlayer: User
  order: [User]!
}

type Query {
  board: Board
}

input makeStepInput {
  x: Int!,
  y: Int!,
}

type Mutation {
  makeStep(input: makeStepInput!): Board
}

type Subscription {
  waitBoardChange: Board
}
