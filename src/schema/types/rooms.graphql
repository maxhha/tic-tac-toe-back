type Room {
  id: ID!
  name: String!
  users: [User]!
  gameActive: Boolean!
}

type Query {
  getRoom(id: ID!): Room
}

type Mutation {
  """
  Create room with name and one user
  """
  createRoom(name: String!):Room
  """
  Add user to room
  """
  enterRoom(id: ID!):Room
  """
  Remove current user from room. True if successful
  """
  exitRoom:Boolean
  """
  Notify if player is ready to start game
  """
  setReady(ready: Boolean!):Room
}

type Subscription {
  """
  Activates when all users ready in room
  """
  waitForOtherUser:Room
  """
  Activates when someone exits room
  """
  userExit:User
}
